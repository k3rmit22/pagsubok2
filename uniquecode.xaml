<UserControl x:Class="kiosk_snapprint.uniquecode"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:kiosk_snapprint"
             mc:Ignorable="d" 
             d:DesignHeight="1080" d:DesignWidth="1900">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FFCFCFCF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF5B5858"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="white"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FFCFCFCF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF5B5858"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="white"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#FFCFCFCF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF5B5858"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="white"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyleback" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FFCFCFCF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF5B5858"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="white"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FFCFCFCF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF5B5858"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="white"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#FFCFCFCF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF5B5858"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="white"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <ContentControl x:Name="ThirdContent">

        <Grid Background="White" Margin="0,95,0,-95">
            <!-- Define row heights to manage layout -->
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <!-- For Image -->
                <RowDefinition Height="Auto" MinHeight="35"/>
                <!-- For Label and TextBox -->
                <RowDefinition Height="Auto"/>
                <!-- For Button -->
            </Grid.RowDefinitions>





            <!-- Image at the top center -->

            <Image Source="/passcode.png" Margin="628,-35,598,640" Grid.RowSpan="2" />


            <!-- Label centered in the second row -->
            <Label Content="PLEASE ENTER YOUR UNIQUE CODE." 
               HorizontalAlignment="Left" 
               VerticalAlignment="Top" 
                   HorizontalContentAlignment="Center"
               FontSize="72" 
               FontWeight="Bold" 
               Margin="250,245,0,0" Height="120" Width="1440" Grid.Row="1"/>

            <!-- TextBox centered in the second row -->
            <TextBox x:Name="TxtBox" Grid.Row="1" 
                 HorizontalAlignment="Left" 
                 Height="140" 
                 Width="725" 
                 Margin="540,465,0,0" 
                 TextWrapping="Wrap" FontSize="72" FontWeight="Bold" BorderBrush="Black" BorderThickness="5,5,5,5 " TextChanged="TextBox_TextChanged" VerticalAlignment="Top"/>

            <!-- Loading Circle (below the TextBox) -->
            <!-- Loading Circle with "Please wait..." text beside it -->
            <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,370,0,0" Visibility="Collapsed" x:Name="LoadingPanel">

                <!-- Spinner -->
                <Grid Width="60" Height="60" Margin="0,0,15,0">
                    <!-- Background circle -->
                    <Ellipse Width="60" Height="60" Stroke="WhiteSmoke" StrokeThickness="8" />

                    <!-- Solid rotating arc -->
                    <Ellipse Width="60" Height="60" Stroke="black" StrokeThickness="8"
                 StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                 StrokeDashArray="15, 50">
                        <!-- Adjusted DashArray -->
                        <Ellipse.RenderTransform>
                            <RotateTransform x:Name="Spinner" Angle="0" CenterX="30" CenterY="30"/>
                        </Ellipse.RenderTransform>
                        <Ellipse.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Storyboard.TargetName="Spinner"
                                             Storyboard.TargetProperty="Angle"
                                             From="0" To="360" Duration="0:0:2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Ellipse.Triggers>
                    </Ellipse>
                </Grid>

                <!-- "Please wait..." message -->
                <Label Content="Please wait..." 
           VerticalAlignment="Center" 
           FontSize="30" 
           Foreground="Black" 
           />
            </StackPanel>


            <!-- Proceed Button centered at the bottom -->
            <Button x:Name="Proceed" Style="{DynamicResource RoundedButtonStyle}" Content="PROCEED" 
                Grid.Row="1" 
                HorizontalAlignment="Left" 
                VerticalAlignment="Top" 
                Height="155" 
                Width="380" 
                Margin="690,730,0,0" FontSize="40" FontWeight="Bold" Background="#FFFDFDFD" BorderBrush="Black" BorderThickness="5,5,5,5" Click="Proceed_Click"/>
            <Button Style="{DynamicResource RoundedButtonStyleback}"  Content="Back"  HorizontalAlignment="Left" VerticalAlignment="Top" 
                Width="200" Height="115" Click="BackButton_Click" Margin="20,15,0,0" FontWeight="Bold" FontSize="40" BorderBrush="Black" Background="White" Foreground="#FF080808" BorderThickness="5,5,5,5"
                />
        </Grid>
    </ContentControl>



</UserControl>
